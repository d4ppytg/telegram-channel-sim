// –í–ê–ñ–ù–û: –≠—Ç–æ—Ç –∫–æ–¥ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–æ–ª–Ω–æ–≥–æ script.js.
// –Ø –Ω–µ –±—É–¥—É –ø–æ–≤—Ç–æ—Ä—è—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –∞ –ø–æ–∫–∞–∂—É —Ç–æ–ª—å–∫–æ –ò–ó–ú–ï–ù–ï–ù–ù–´–ï –∏ –ù–û–í–´–ï —á–∞—Å—Ç–∏.
// –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ –≤ –≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π script.js –æ—Ç –≤–µ—Ä—Å–∏–∏ v0.7.0.

document.addEventListener('DOMContentLoaded', () => {
    const tg = window.Telegram.WebApp;

    // –≠–∫—Ä–∞–Ω—ã –∏ –æ–≤–µ—Ä–ª–µ–∏
    const preloader = document.getElementById('preloader');
    const themeSelectionScreen = document.getElementById('theme-selection-screen');
    const welcomeScreen = document.getElementById('welcome-screen');
    const cutsceneScreen = document.getElementById('cutscene-screen');
    
    const gameInterface = document.getElementById('game-interface'); // << –ù–û–í–´–ô –ì–õ–ê–í–ù–´–ô –ö–û–ù–¢–ï–ô–ù–ï–†
    const gameScreensContainer = document.getElementById('game-screens-container'); // << –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
    const allGameScreens = gameScreensContainer ? gameScreensContainer.querySelectorAll('.game-screen') : [];
    // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã-–≤–∫–ª–∞–¥–∫–∏
    const studioScreen = document.getElementById('studioScreen');
    const createPostScreen = document.getElementById('createPostScreen');
    const upgradesScreen = document.getElementById('upgradesScreen');
    const rankingsScreen = document.getElementById('rankingsScreen');
    
    const startGameButton = document.getElementById('start-game-button');
    const cutsceneSlides = cutsceneScreen ? cutsceneScreen.querySelectorAll('.cutscene-slide') : [];
    let currentSlideIndex = 0;
    const telegramUsernameDisplay = document.getElementById('telegram-username-display');
    const userPhotoEl = document.getElementById('user-photo');

    const characterEl = document.getElementById('character-sprite');
    let characterStateTimeout; 

    // –≠–ª–µ–º–µ–Ω—Ç—ã —Ö–µ–¥–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–ø–µ—Ä—å –æ–±—â–∏–π –¥–ª—è game-interface
    const subscribersCountEl = document.getElementById('subscribers-count');
    const balanceCountEl = document.getElementById('balance-count');
    const audienceMoodDisplay = document.getElementById('audience-mood-display');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –≤–∫–ª–∞–¥–∫–∏ "–°—Ç—É–¥–∏—è"
    const channelNameOnMonitorEl = document.getElementById('channel-name-on-monitor');
    const gameVersionEl = document.getElementById('game-version'); // –í —Ñ—É—Ç–µ—Ä–µ —Å—Ç—É–¥–∏–∏
    const currentTrendDisplayMonitor = document.getElementById('current-trend-display-monitor');
    const trendDescriptionMonitorEl = document.getElementById('trend-description-monitor');
    const goToCreatePostTabButton = document.getElementById('go-to-create-post-tab'); // –ö–Ω–æ–ø–∫–∞ –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–µ
    const studioSidePanel = document.getElementById('studio-side-panel'); // –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –≤ —Å—Ç—É–¥–∏–∏
    const openLogButton = document.getElementById('open-log-button');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –≤–∫–ª–∞–¥–∫–∏ "–°–æ–∑–¥–∞—Ç—å"
    const postTextButton = document.querySelector('#createPostScreen .content-type-button[data-post-type="text"]');
    const postMemeButton = document.querySelector('#createPostScreen .content-type-button[data-post-type="meme"]');
    const postVideoButton = document.querySelector('#createPostScreen .content-type-button[data-post-type="video"]');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –≤–∫–ª–∞–¥–∫–∏ "–£–ª—É—á—à–µ–Ω–∏—è"
    const upgradeContentQualityButton = document.querySelector('#upgradesScreen #upgrade-content-quality');
    const upgradeCostSpan = document.querySelector('#upgradesScreen #upgrade-content-quality .upgrade-cost');
    
    // –û–±—â–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –∏—Ö —ç–ª–µ–º–µ–Ω—Ç—ã
    const logModal = document.getElementById('log-modal');
    const closeModalButtons = document.querySelectorAll('.close-modal-button');
    const eventLogUl = document.getElementById('event-log');

    // –í—Å–ø–ª—ã–≤–∞—é—â–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    const liveFeedbackContainer = document.getElementById('live-feedback-container');
    const MAX_FEEDBACK_ITEMS = 7;
    const positiveComments = ["–ö—Ä—É—Ç–æ!", "–õ—É—á—à–∏–π –ø–æ—Å—Ç!", "–û–≥–æ–Ω—å üî•", "–õ—é–±–ª—é!", "–ü–æ–¥–ø–∏—Å–∫–∞!", "üëçüëçüëç"];
    const neutralComments = ["–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ.", "–ù–µ–ø–ª–æ—Ö–æ.", "–ü–æ–π–¥–µ—Ç.", "–ù–æ—Ä–º.", "ü§î"];
    const negativeComments = ["–ß—Ç–æ —ç—Ç–æ?", "–°–∫—É—á–Ω–æ.", "–û—Ç–ø–∏—Å–∫–∞.", "üëé", "–ù–µ –ø–æ–Ω—è–ª."];
    const reactionEmojis = ['‚ù§Ô∏è', 'üòÇ', 'üéâ', 'ü§Ø', 'üëÄ'];

    const navButtons = document.querySelectorAll('.bottom-nav .nav-button');


    tg.ready();
    tg.expand();

    let defaultGameState = {
        channelName: "–ú–æ–π –ö–∞–Ω–∞–ª", subscribers: 0, balance: 100, engagementRate: 0,
        audienceMood: 75, contentQualityMultiplier: 1, postsMade: 0,
        gameVersion: "0.8.0", 
        theme: null, themeModifiers: { text: 1, meme: 1, video: 1 },
        currentTrend: null, trendPostsRemaining: 0,
    };
    let gameState = { ...defaultGameState };

    const CHARACTER_STATES = { IDLE_BLINKING: 'idle_blinking', TYPING: 'typing', HAPPY: 'happy', SLEEPING: 'sleeping' };

    function setCharacterState(newState, durationMs = 0) { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ ... */ }

    // --- –£–ü–†–ê–í–õ–ï–ù–ò–ï –≠–ö–†–ê–ù–ê–ú–ò ---
    function showTopLevelScreen(screenElement) {
        [preloader, themeSelectionScreen, welcomeScreen, cutsceneScreen, gameInterface].forEach(el => {
            if (el) { el.classList.remove('visible'); el.style.display = 'none';}
        });
        if (screenElement) {
            screenElement.style.display = 'flex'; 
            requestAnimationFrame(() => { requestAnimationFrame(() => { screenElement.classList.add('visible'); }); });
        }
    }

    function setActiveGameScreen(targetScreenId) {
        allGameScreens.forEach(screen => {
            const isActive = screen.id === targetScreenId;
            screen.style.display = isActive ? 'flex' : 'none';
            screen.classList.toggle('active-screen', isActive);
        });
        navButtons.forEach(button => {
            button.classList.toggle('active', button.dataset.targetScreen === targetScreenId);
        });
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å —Å—Ç—É–¥–∏–∏
        if (studioSidePanel) {
            studioSidePanel.style.display = (targetScreenId === 'studioScreen') ? 'flex' : 'none';
        }
        if(gameScreensContainer) gameScreensContainer.scrollTop = 0;
    }
    
    function playCutscene() { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ, –≤ –∫–æ–Ω—Ü–µ –≤—ã–∑—ã–≤–∞–µ—Ç startGameplay() ... */ }
    function showNextSlide() { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ ... */ }
    
    function initializeGameFlow() { 
        const savedState = localStorage.getItem('channelSimGameState_v8'); 
        if (savedState) { const parsedState = JSON.parse(savedState); gameState = { ...defaultGameState, ...parsedState }; if (gameState.theme) { showWelcomeScreen(); return; } }
        gameState = { ...defaultGameState }; saveGame(); showThemeSelectionScreen();
    }
    function showThemeSelectionScreen() { logEvent("–¢—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–±–æ—Ä —Ç–µ–º–∞—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–∞.", "info"); showTopLevelScreen(themeSelectionScreen); }
    function showWelcomeScreen() { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ, –Ω–æ —Å showTopLevelScreen ... */ showTopLevelScreen(welcomeScreen); }
    
    function startGameplay() { 
        loadGame(); 
        showTopLevelScreen(gameInterface); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Å—å –∏–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        setActiveGameScreen('studioScreen'); // –î–µ–ª–∞–µ–º —Å—Ç—É–¥–∏—é –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        setCharacterState(CHARACTER_STATES.IDLE_BLINKING);
        logEvent(`–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ö–∞–Ω–∞–ª: ${gameState.channelName}.`, "info");
    }

    function loadGame() { 
        const savedState = localStorage.getItem('channelSimGameState_v8');
        if (savedState) { const parsedState = JSON.parse(savedState); gameState = { ...defaultGameState, ...parsedState };}
        if (gameVersionEl) gameVersionEl.textContent = `v${gameState.gameVersion}`;
        updateUI(); updateTrendUI(); checkUpgradeButtonStatus();
    }
    function saveGame() { localStorage.setItem('channelSimGameState_v8', JSON.stringify(gameState)); }
    function logEvent(message, type = 'info') { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ ... */ }
    
    function updateUI() { 
        const displayName = gameState.channelName || `–ö–∞–Ω–∞–ª [${getThemeDisplayName(gameState.theme)}]`;
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ö–µ–¥–µ—Ä
        if (subscribersCountEl) subscribersCountEl.textContent = gameState.subscribers;
        if (balanceCountEl) balanceCountEl.textContent = gameState.balance.toFixed(0);
        if (audienceMoodDisplay) audienceMoodDisplay.textContent = gameState.audienceMood.toFixed(0);
        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å—Ç—É–¥–∏–∏ (–µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω)
        if (channelNameOnMonitorEl) channelNameOnMonitorEl.textContent = displayName;
        updateTrendUI(); // –¢—Ä–µ–Ω–¥—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∏ –Ω–∞ –¥—Ä—É–≥–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö, –Ω–æ –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–µ
    }
    function checkUpgradeButtonStatus() { 
        if (!upgradeContentQualityButton) return;
        const cost = parseInt(upgradeContentQualityButton.dataset.cost);
        upgradeContentQualityButton.disabled = gameState.balance < cost;
        if (upgradeCostSpan) upgradeCostSpan.textContent = cost;
    }
    function updateTrendUI() { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ, –æ–±–Ω–æ–≤–ª—è–µ—Ç trendDescriptionMonitorEl ... */ }
    function generateNewTrend() { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ ... */ }
    function getThemeDisplayName(themeKey) { /* ... */ }
    function getPostTypeName(typeKey) { /* ... */ }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    navButtons.forEach(button => {
        button.addEventListener('click', () => {
            setActiveGameScreen(button.dataset.targetScreen);
        });
    });
    if(goToCreatePostTabButton) goToCreatePostTabButton.addEventListener('click', () => {
        setActiveGameScreen('createPostScreen');
    });

    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ª–æ–≥–∞
    function openModal(modalElement) { /* ... */ }
    function closeModal(modalElement) { /* ... */ }
    if(openLogButton) openLogButton.addEventListener('click', () => openModal(logModal));
    closeModalButtons.forEach(button => { /* ... */ });

    // –í—Å–ø–ª—ã–≤–∞—é—â–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    function showFeedback(text, isEmoji = false, username = null) { /* ... –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø–æ–ª–Ω–æ–º –∫–æ–¥–µ ... */ }

    // –î–µ–π—Å—Ç–≤–∏—è –∏–≥—Ä—ã
    function handlePostAction(postType, baseSubMin, baseSubMax, baseMoneyMin, baseMoneyMax, erMin, erMax) {
        setCharacterState(CHARACTER_STATES.TYPING); 
        setTimeout(() => {
            // ... (–í–°–Ø –ª–æ–≥–∏–∫–∞ –ø–æ—Å—Ç–∞: themeMod, moodMultiplier, trendBonusMultiplier, —Ä–∞—Å—á–µ—Ç subGain, moneyGain, ER, moodChange, –æ—Ç–ø–∏—Å–∫–∏) ...
            // –ö–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø–æ–ª–Ω–æ–º –∫–æ–¥–µ script.js
            // ...
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–¥–±–µ–∫–∞
            const feedbackCount = Math.floor(Math.random() * 3) + 2; 
            for (let i = 0; i < feedbackCount; i++) { /* ... */ }
            
            setActiveGameScreen('studioScreen'); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω —Å—Ç—É–¥–∏–∏ –ø–æ—Å–ª–µ –ø–æ—Å—Ç–∞
        }, 700); 
    }

     if(postTextButton) postTextButton.addEventListener('click', () => handlePostAction('text', 1, 5, 2, 10, 1, 5));
     if(postMemeButton) postMemeButton.addEventListener('click', () => handlePostAction('meme', 3, 10, 1, 5, 2, 8));
     if(postVideoButton) postVideoButton.addEventListener('click', () => handlePostAction('video', 8, 20, 7, 18, 3, 10));
     if(upgradeContentQualityButton) upgradeContentQualityButton.addEventListener('click', () => { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ, –Ω–æ –±–µ–∑ closeModal ... */ });

    if (themeSelectionScreen) { /* ... –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –∫–∞–∫ —Ä–∞–Ω—å—à–µ ... */ }
    
    showTopLevelScreen(preloader);
    setTimeout(() => {
        if (preloader) { preloader.classList.remove('visible'); setTimeout(() => { if(preloader) preloader.style.display = 'none'; }, 700); }
        initializeGameFlow();
    }, 2500); 

    if (startGameButton) { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ, –≤—ã–∑—ã–≤–∞–µ—Ç playCutscene() ... */ }
    
    if (tg.BackButton) { /* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ, –Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ª–æ–≥–∞ –∏–ª–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –∏–≥—Ä—É */ }
});
